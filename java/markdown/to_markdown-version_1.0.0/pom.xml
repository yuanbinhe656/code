<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>
		<relativePath/>
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<docker.image.prefix>markdown_resolve</docker.image.prefix>
	</properties>


	<groupId>com.liangtengyu.markdown</groupId>
	<artifactId>markdown</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>markdown</name>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.12</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.11.3</version>
		</dependency>

		<dependency>
			<groupId>com.kotcrab.remark</groupId>
			<artifactId>remark</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.75</version>
        </dependency>

		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>5.6.2</version>
		</dependency>
    </dependencies>

	<build>
		<finalName>markdown_resolve</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>





			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>

				<configuration>
					<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
					<!--指定标签-->
					<imageTags>
						<imageTag>latest</imageTag>
					</imageTags>
					<!-- 基础镜像jdk 1.8-->
					<baseImage>java</baseImage>
					<!-- 制作者提供本人信息 -->
					<maintainer>liangtengyu.com</maintainer>
					<!--切换到/ROOT目录 -->
					<workdir>/ROOT</workdir>
					<cmd>["java", "-version"]</cmd>
					<entryPoint>["java", "-jar", "${project.build.finalName}.jar"]
					</entryPoint>

					<!--指定远程 docker api地址-->
					<dockerHost>http://localhost:1234</dockerHost>
					<!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
					<resources>
						<resource>
							<targetPath>/ROOT</targetPath>
							<!--用于指定需要复制的根目录，${project.build.directory}表示target目录-->
							<directory>${project.build.directory}</directory>
							<!--用于指定需要复制的文件。${project.build.finalName}.jar指的是打包后的jar包文件。-->
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
